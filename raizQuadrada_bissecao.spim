.data
    entrada: .asciiz "Digite o valor a ser calculado e o valor de Epsilon:\n"
    invalid: .asciiz "Entradas Inválidas\n"
    limit:   .asciiz "Não foi possível calcular sqrt(x)\n"
    msg_result: .asciiz "A raiz quadrada de x eh "
    msg_result_1:  .asciiz ", calculada em "
    msg_result_2:   .asciiz " iteracoes\n"

.text
main:
    input:
    li $v0, 4
    la $a0, entrada     
    syscall

    li $v0, 5       
    syscall
    move $s0, $v0   

    li $v0, 5
    syscall         
    move $s1, $v0   

    ble $s0, 1, invalido            
    blt $s1, 1, invalido                  
    bgt $s1, 16, invalido       

    mtc1 $s1, $f7           
    cvt.s.w $f7, $f7        
    mtc1 $s0, $f0          
    cvt.s.w $f0, $f0

    li.s $f8, 10.0  
    li.s $f10, 1.0

    add $t1, $t1, $zero
    tolerancia:
        mul.s $f10, $f10, $f8   
        div.s $f9, $f7, $f10   

        addi $t1, $t1, 1
        beq $t1, $s1, iteracao_Inicial
        j tolerancia

    iteracao_Inicial:  
        li.s $f1, 2.0               
        div.s $f2, $f0, $f1        
    
        li.s $f11, 2.0
        addi $t0, $t0, 1            
    iteracao:
        addi $t0, $t0, 1

        add.s $f3, $f1, $f2     
        div.s $f5, $f3, $f11    

        div.s $f6, $f0, $f5    

        mov.s $f1, $f5          
        mov.s $f2, $f6          

        beq $t0, 100, limite

        sub.s $f4, $f5, $f6
        c.le.s $f4, $f9        
        bc1t saida
 
    j iteracao

    invalido:
    li $v0, 4
    la $a0, invalid     
    syscall

    j input

    limite:
        li $v0, 4
        la $v0, limit
        syscall

    saida:
        li $v0, 4
        la $a0, msg_result
        syscall

        li $v0, 2
        mov.s $f12, $f5
        syscall

        li $v0, 4
        la $a0, msg_result_1
        syscall

        li $v0, 1
        move $a0, $t0
        syscall

        li $v0, 4
        la $a0, msg_result_2
        syscall

        li $v0, 10
        syscall

jr $ra